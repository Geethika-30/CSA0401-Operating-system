#include <stdio.h>
#include <string.h>

#define MAX_USERS 10
#define MAX_FILES 10
#define MAX_NAME_LEN 50

struct UserDirectory {
    char username[MAX_NAME_LEN];
    char filenames[MAX_FILES][MAX_NAME_LEN];
    int file_count;
};

struct UserDirectory users[MAX_USERS];
int user_count = 0;

// Function to find user index
int findUser(const char *username) {
    for (int i = 0; i < user_count; i++) {
        if (strcmp(users[i].username, username) == 0)
            return i;
    }
    return -1;
}

void createUser(const char *username) {
    if (user_count >= MAX_USERS) {
        printf("Maximum user limit reached.\n");
        return;
    }
    if (findUser(username) != -1) {
        printf("User '%s' already exists.\n", username);
        return;
    }
    strcpy(users[user_count].username, username);
    users[user_count].file_count = 0;
    user_count++;
    printf("User '%s' created.\n", username);
}

void createFile(const char *username, const char *filename) {
    int index = findUser(username);
    if (index == -1) {
        printf("User not found.\n");
        return;
    }

    for (int i = 0; i < users[index].file_count; i++) {
        if (strcmp(users[index].filenames[i], filename) == 0) {
            printf("File already exists for user '%s'.\n", username);
            return;
        }
    }

    strcpy(users[index].filenames[users[index].file_count], filename);
    users[index].file_count++;
    printf("File '%s' created for user '%s'.\n", filename, username);
}

void deleteFile(const char *username, const char *filename) {
    int index = findUser(username);
    if (index == -1) {
        printf("User not found.\n");
        return;
    }

    for (int i = 0; i < users[index].file_count; i++) {
        if (strcmp(users[index].filenames[i], filename) == 0) {
            for (int j = i; j < users[index].file_count - 1; j++) {
                strcpy(users[index].filenames[j], users[index].filenames[j + 1]);
            }
            users[index].file_count--;
            printf("File '%s' deleted for user '%s'.\n", filename, username);
            return;
        }
    }

    printf("File not found.\n");
}

void displayUserFiles(const char *username) {
    int index = findUser(username);
    if (index == -1) {
        printf("User not found.\n");
        return;
    }

    printf("Files for user '%s':\n", username);
    if (users[index].file_count == 0) {
        printf("No files found.\n");
        return;
    }

    for (int i = 0; i < users[index].file_count; i++) {
        printf("- %s\n", users[index].filenames[i]);
    }
}

int main() {
    int choice;
    char username[MAX_NAME_LEN], filename[MAX_NAME_LEN];

    while (1) {
        printf("\n1. Create User\n2. Create File\n3. Delete File\n4. Display Files\n5. Exit\nEnter your choice: ");
        scanf("%d", &choice);
        getchar(); // consume newline

        switch (choice) {
            case 1:
                printf("Enter username: ");
                fgets(username, MAX_NAME_LEN, stdin);
                username[strcspn(username, "\n")] = '\0'; // remove newline
                createUser(username);
                break;

            case 2:
                printf("Enter username: ");
                fgets(username, MAX_NAME_LEN, stdin);
                username[strcspn(username, "\n")] = '\0';

                printf("Enter filename to create: ");
                fgets(filename, MAX_NAME_LEN, stdin);
                filename[strcspn(filename, "\n")] = '\0';

                createFile(username, filename);
                break;

            case 3:
                printf("Enter username: ");
                fgets(username, MAX_NAME_LEN, stdin);
                username[strcspn(username, "\n")] = '\0';

                printf("Enter filename to delete: ");
                fgets(filename, MAX_NAME_LEN, stdin);
                filename[strcspn(filename, "\n")] = '\0';

                deleteFile(username, filename);
                break;

            case 4:
                printf("Enter username: ");
                fgets(username, MAX_NAME_LEN, stdin);
                username[strcspn(username, "\n")] = '\0';

                displayUserFiles(username);
                break;

            case 5:
                return 0;

            default:
                printf("Invalid choice.\n");
        }
    }

    return 0;
}
